// Generated by CoffeeScript 1.3.3
(function() {

  $(function() {
    var hPass, hSubdomain, hUser, pPass, pUser;
    pUser = localStorage['pivotal_username'];
    pPass = localStorage['pivotal_password'];
    hUser = localStorage['harvest_username'];
    hPass = localStorage['harvest_password'];
    hSubdomain = localStorage['harvest_subdomain'];
    $('#pivotal_username').val(pUser);
    $('#pivotal_password').val(pPass);
    $('#harvest_username').val(hUser);
    $('#harvest_password').val(hPass);
    $('#harvest_subdomain').val(hSubdomain);
    if ((pUser != null) && (pPass != null) && (hUser != null) && (hPass != null) && (hSubdomain != null)) {
      chrome.extension.sendMessage({
        method: 'login'
      }, function(response) {
        var msg, _i, _len, _ref;
        if (response.error != null) {
          _ref = response.error.messages;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            msg = _ref[_i];
            $('.error').append('<div>' + msg + '</div>');
          }
          return;
        }
        return chrome.extension.sendMessage({
          method: 'downloadProjects'
        }, function(response) {
          var $body, harvest, map, mapping, options, pivotal, project, _j, _k, _l, _len1, _len2, _len3, _results;
          $body = $('#projects').find('tbody');
          harvest = response.harvest;
          pivotal = response.pivotal;
          options = '<option value=""></option>';
          for (_j = 0, _len1 = pivotal.length; _j < _len1; _j++) {
            project = pivotal[_j];
            options += '<option value="' + project.id + '">' + project.name + '</option>';
          }
          for (_k = 0, _len2 = harvest.length; _k < _len2; _k++) {
            project = harvest[_k];
            $body.append('<tr><td><span class="code">[' + project.code + ']</span> ' + project.name + '</td><td><select id="' + project.id + '">' + options + '</select></td></tr>');
          }
          if (localStorage['project_mapping'] != null) {
            mapping = JSON.parse(localStorage['project_mapping']);
            _results = [];
            for (_l = 0, _len3 = mapping.length; _l < _len3; _l++) {
              map = mapping[_l];
              _results.push($('#' + map.harvest).val(map.pivotal));
            }
            return _results;
          }
        });
      });
    }
    return $('form').submit(function() {
      var $el, el, mapping, _i, _len, _ref;
      localStorage['pivotal_username'] = $('#pivotal_username').val();
      localStorage['pivotal_password'] = $('#pivotal_password').val();
      localStorage['harvest_username'] = $('#harvest_username').val();
      localStorage['harvest_password'] = $('#harvest_password').val();
      localStorage['harvest_subdomain'] = $('#harvest_subdomain').val();
      mapping = [];
      _ref = $('#projects select');
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        el = _ref[_i];
        $el = $(el);
        if ($el.val() !== '') {
          mapping.push({
            pivotal: $el.val(),
            harvest: $el.attr('id')
          });
        }
      }
      return localStorage['project_mapping'] = JSON.stringify(mapping);
    });
  });

}).call(this);
