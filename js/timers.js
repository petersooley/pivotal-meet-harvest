// Generated by CoffeeScript 1.3.3
(function() {
  var Timers;

  Timers = (function() {

    function Timers(opts) {
      this.projectId = opts.projectId;
      this.storyId = opts.storyId;
      this.$html = $(opts.html);
      if (this.storyId != null) {
        this.setupSingle();
      } else {
        this.setup();
      }
    }

    Timers.prototype.setupSingle = function() {
      var $harvest, timerHtml,
        _this = this;
      timerHtml = this.$html.find('#single-timer').html();
      $('.details_sidebar ul.subset li.state').after(timerHtml);
      $harvest = $('.details_sidebar ul.subset li.harvest');
      $harvest.find('select').chosen();
      return $harvest.find('.toggle').click(function() {
        console.log(_this.pivotalProject);
        return console.log(_this.harvestProject);
      });
    };

    Timers.prototype.setup = function() {
      return console.log('setting up all');
    };

    return Timers;

  })();

  window.ERR = function(msg) {
    msg = 'Pivotal Meet Harvest Error: ' + msg;
    throw new Error(msg);
  };

  $(function() {
    return chrome.extension.sendMessage({
      method: 'login'
    }, function(response) {
      var projectId, storyId, t, uri;
      if (response.error != null) {
        ERR('There was a problem logging in to the Pivotal Tracker API or the Harvest API. See extension options.');
      }
      uri = document.location.href.split('/');
      if (typeof uri[4] === 'undefined' || uri[3] !== 'projects') {
        return;
      }
      projectId = parseInt(uri[4]);
      storyId = null;
      if (typeof uri[5] !== 'undefined' && uri[5] === 'stories') {
        storyId = parseInt(uri[6]);
      }
      return t = new Timers({
        storyId: storyId,
        projectId: projectId,
        html: response
      });
    });
  });

}).call(this);
