// Generated by CoffeeScript 1.3.3
(function() {
  var Harvest, Pivotal, harvest, pivotal;

  Pivotal = (function() {

    function Pivotal(user, pass) {
      var self;
      self = this;
      $.ajax({
        url: 'https://www.pivotaltracker.com/services/v3/tokens/active',
        type: 'POST',
        async: false,
        data: {
          username: user,
          password: pass
        },
        success: function(data) {
          var $guid;
          $guid = $(data).find('guid');
          return self.token = $guid.text();
        },
        error: function(xhr, status, error) {
          throw Error('Pivotal Tracker login failure.');
        }
      });
    }

    return Pivotal;

  })();

  Harvest = (function() {

    function Harvest(user, pass, subdomain) {
      this.user = user;
      this.pass = pass;
      this.subdomain = subdomain;
      this.POST('account/who_am_i');
    }

    Harvest.prototype.POST = function(path) {
      var returnData;
      returnData = {};
      $.ajax({
        url: 'https://' + this.subdomain + '.harvestapp.com/' + path,
        type: 'GET',
        async: false,
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json',
          'Authorization': 'Basic ' + Base64.encode(this.user + ':' + this.pass)
        },
        success: function(data, status) {
          return returnData = data;
        },
        error: function(xhr, status, error) {
          throw Error('Harvest login failure.');
        }
      });
      return returnData;
    };

    return Harvest;

  })();

  pivotal = {};

  harvest = {};

  chrome.extension.onMessage.addListener(function(request, sender, sendResponse) {
    var error, hPass, hSubdomain, hUser, harvestError, pPass, pUser, pivotalError;
    error = {};
    error.messages = [];
    switch (request.method) {
      case 'login':
        pUser = localStorage['pivotal_username'];
        pPass = localStorage['pivotal_password'];
        hUser = localStorage['harvest_username'];
        hPass = localStorage['harvest_password'];
        hSubdomain = localStorage['harvest_subdomain'];
        pivotalError = null;
        harvestError = null;
        if ((pUser != null) && (pPass != null) && (hUser != null) && (hPass != null)) {
          console.log('logging in');
          try {
            pivotal = new Pivotal(pUser, pPass);
          } catch (e) {
            console.log(e);
            error.messages.push(e.message);
          }
          try {
            harvest = new Harvest(hUser, hPass, hSubdomain);
          } catch (e) {
            error.messages.push(e.message);
          }
          if (error.messages.length === 0) {
            sendResponse({
              success: true
            });
            return;
          }
        } else {
          error.messages = ["Missing login information. See options page."];
        }
        break;
      default:
        error.messages = ["Missing request method in sendMessage call."];
    }
    return sendResponse({
      error: error
    });
  });

}).call(this);
