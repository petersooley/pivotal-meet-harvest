// Generated by CoffeeScript 1.3.3
var HarvestAPI;

HarvestAPI = (function() {

  function HarvestAPI(user, pass, subdomain) {
    var result;
    this.user = user;
    this.pass = pass;
    this.subdomain = subdomain;
    result = this.GET('account/who_am_i');
    if (result === false) {
      throw Error('There was a problem logging in to the Harvest API. See options page.');
    }
  }

  HarvestAPI.prototype.getAllProjects = function() {
    var code, data, id, name, project, projects, _i, _len, _ref;
    data = this.GET('projects');
    projects = [];
    _ref = $(data).find('project');
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      project = _ref[_i];
      name = $(project).find('name').text();
      id = $(project).find('id').text();
      code = $(project).find('code').text();
      projects.push({
        name: name,
        id: id,
        code: code
      });
    }
    return projects;
  };

  HarvestAPI.prototype.createEntry = function(harvestProjectId, notes, hours, taskId) {};

  HarvestAPI.prototype.toggleEntry = function(entryId) {};

  HarvestAPI.prototype.getEntry = function(entryid) {};

  HarvestAPI.prototype.editEntry = function(entryId, notes, hours, taskId) {};

  HarvestAPI.prototype.getTodaysEntriesAndTasks = function(harvestProjectId) {
    var daily, e, entries, entry, id, project, running, t, task, tasks, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2;
    daily = this.GET('daily');
    entries = [];
    tasks = [];
    _ref = $(daily).find('project');
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      project = _ref[_i];
      id = $(project).children('id')[0];
      if ((id != null) && $(id).text() === '' + harvestProjectId) {
        _ref1 = $(project).find('task');
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          task = _ref1[_j];
          t = {
            name: $($(task).find('name')[0]).text(),
            id: $($(task).find('id')[0]).text(),
            billable: $($(task).find('billable')[0]).text()
          };
          tasks.push(t);
        }
        break;
      }
    }
    _ref2 = $(daily).find('day_entry');
    for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
      entry = _ref2[_k];
      if ($($(entry).find('project_id')[0]).text() === '' + harvestProjectId) {
        running = $(entry).find('timer_started_at')[0] != null ? true : false;
        e = {
          id: $($(entry).find('id')[0]).text(),
          hours: $($(entry).find('hours')[0]).text(),
          running: running,
          task: $($(entry).find('task_id')[0]).text(),
          notes: $($(entry).find('notes')[0]).text()
        };
        entries.push(e);
        break;
      }
    }
    return {
      entries: entries,
      tasks: tasks
    };
  };

  HarvestAPI.prototype.GET = function(path) {
    return this.HTTP('GET', path, null);
  };

  HarvestAPI.prototype.POST = function(path, data) {
    return this.HTTP('POST', path, data);
  };

  HarvestAPI.prototype.HTTP = function(method, path, data) {
    var returnData;
    returnData = {};
    $.ajax({
      url: 'https://' + this.subdomain + '.harvestapp.com/' + path,
      type: method,
      data: data,
      async: false,
      headers: {
        'Content-Type': 'application/xml',
        'Accept': 'application/xml',
        'Authorization': 'Basic ' + Base64.encode(this.user + ':' + this.pass)
      },
      success: function(data, status) {
        return returnData = data;
      },
      error: function(xhr, status, error) {
        return returnData = false;
      }
    });
    return returnData;
  };

  return HarvestAPI;

})();
